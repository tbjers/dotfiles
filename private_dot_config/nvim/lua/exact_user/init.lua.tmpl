-- -*-mode:lua-*- vim:ft=lua
-- {{- $colortheme := .colortheme -}}
-- {{- if eq $colortheme "gruvbox-dark" -}}
-- {{- $colortheme = "gruvbox" -}}
-- {{- else if eq $colortheme "dracula-pro" -}}
-- {{- $colortheme = "dracula" -}}
-- {{- end }}

return {
  -- Configure AstroNvim updates
  updater = {
    remote = "origin",     -- remote to use
    channel = "stable",    -- "stable" or "nightly"
    version = "latest",    -- "latest", tag name, or regex search like "v1.*" to only do updates before v2 (STABLE ONLY)
    branch = "nightly",    -- branch name (NIGHTLY ONLY)
    commit = nil,          -- commit hash (NIGHTLY ONLY)
    pin_plugins = nil,     -- nil, true, false (nil will pin plugins on stable only)
    skip_prompts = false,  -- skip prompts about breaking changes
    show_changelog = true, -- show the changelog after performing an update
    auto_quit = true,      -- automatically quit the current session after a successful update
    remotes = {            -- easily add new remotes to track
      --   ["remote_name"] = "https://remote_url.come/repo.git", -- full remote url
      --   ["remote2"] = "github_user/repo", -- GitHub user/repo shortcut,
      --   ["remote3"] = "github_user", -- GitHub user assume AstroNvim fork
    },
  },

  -- Set colorscheme to use
  colorscheme = "{{ $colortheme }}",

  -- Diagnostics configuration (for vim.diagnostics.config({...})) when diagnostics are on
  diagnostics = {
    virtual_lines = {
      only_current_line = true,
    },
    virtual_text = true,
    underline = true,
  },

  lsp = {
    -- customize lsp formatting options
    formatting = {
      -- control auto formatting on save
      format_on_save = {
        enabled = true,
      },
      timeout_ms = 1000, -- default format timeout
      -- filter = function(client) -- fully override the default formatting function
      --   return true
      -- end,
    },
    config = {
      cssls = {
        settings = {
          css = {
            validate = true,
            lint = {
              unknownAtRules = "ignore",
            },
          },
          scss = {
            validate = true,
            lint = {
              unknownAtRules = "ignore",
            },
          },
          less = {
            validate = true,
            lint = {
              unknownAtRules = "ignore",
            },
          },
        },
      },
    },
  },

  -- Configure require("lazy").setup() options
  lazy = {
    defaults = { lazy = true },
    performance = {
      rtp = {
        -- customize default disabled vim plugins
        disabled_plugins = { "tohtml", "gzip", "matchit", "zipPlugin", "netrwPlugin", "tarPlugin" },
      },
    },
  },

  -- This function is run last and is a good place to configuring
  -- augroups/autocommands and custom filetypes also this just pure lua so
  -- anything that doesn't fit in the normal config locations above can go here
  polish = function()
    require("transparent").clear_prefix "BufferLine"
    require("transparent").clear_prefix "lualine"
    require("transparent").clear_prefix "NeoTree"

    require("notify").setup {
      background_colour = function() return "#000000" end,
    }

    require("transparent").clear_prefix "NeoTree"

    vim.filetype.add {
      extension = {
        dbml = "dbml",
      },
    }

    -- Several stubborn upstreams went to this bar and had some drinks...
    -- HashiCorp: "Not our fault that Neovim can't handle dashes in plugin names."
    -- nvim-lspconfig: "Well, then who's fucking fault is it?"
    -- Neovim: "Y'all are some lazy fucks. Hashi, it's your turn to buy a round of shots."
    -- u/gerrazor: [from one of the tables in the back] `au BufRead,BufNewFile *.tfvars set filetype=terraform`
    -- Everyone else: "Thanks, Ger!"
    vim.filetype.add {
      extension = {
        tfvars = "terraform",
      },
    }
  end,
}
